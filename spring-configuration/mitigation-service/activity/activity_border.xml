<?xml version="1.0" encoding="UTF-8"?>
<beans
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <context:annotation-config/>
    
    <!-- Activities that belong to border locations goes here -->
    
    <bean class="com.amazon.lookout.mitigation.service.activity.AbortDeploymentActivity">
        <constructor-arg name="requestValidator" ref="requestValidator"/>
        <constructor-arg name="requestInfoHandler" ref="ddbBasedRequestInfoHandler"/>
        <constructor-arg name="requestStorageManager" ref="ddbBasedRequestStorageManager"/>
        <constructor-arg name="currentDao" ref="currentDao" />
        <constructor-arg name="switcherooDao" ref="switcherooDao" />
    </bean>
    
    <bean class="com.amazon.lookout.mitigation.service.activity.CreateMitigationActivity">
        <constructor-arg name="requestValidator" ref="requestValidator"/>
        <constructor-arg name="templateBasedValidator" ref="templateBasedRequestValidator"/>
        <constructor-arg name="requestStorageManager" ref="ddbBasedRequestStorageManager"/>
        <constructor-arg name="swfWorkflowStarter" ref="swfWorkflowStarter"/>
        <constructor-arg name="templateBasedLocationsManager" ref="templateBasedLocationsManager"/>
        <constructor-arg name="requestCreator" ref="requestCreator" />
        <constructor-arg name="switcherooDao" ref="switcherooDao" />
    </bean>

    <bean class="com.amazon.lookout.mitigation.service.activity.EditMitigationActivity">
        <constructor-arg name="requestValidator" ref="requestValidator"/>
        <constructor-arg name="templateBasedValidator" ref="templateBasedRequestValidator"/>
        <constructor-arg name="requestStorageManager" ref="ddbBasedRequestStorageManager"/>
        <constructor-arg name="swfWorkflowStarter" ref="swfWorkflowStarter"/>
        <constructor-arg name="templateBasedLocationsManager" ref="templateBasedLocationsManager"/>
        <constructor-arg name="requestCreator" ref="requestCreator" />
        <constructor-arg name="switcherooDao" ref="switcherooDao" />
    </bean>

    <bean class="com.amazon.lookout.mitigation.service.activity.RollbackMitigationActivity">
        <constructor-arg name="requestValidator" ref="requestValidator"/>
        <constructor-arg name="templateBasedValidator" ref="templateBasedRequestValidator"/>
        <constructor-arg name="requestStorageManager" ref="ddbBasedRequestStorageManager"/>
        <constructor-arg name="swfWorkflowStarter" ref="swfWorkflowStarter"/>
        <constructor-arg name="requestInfoHandler" ref="ddbBasedRequestInfoHandler"/>
        <constructor-arg name="currentDao" ref="currentDao" />
        <constructor-arg name="archiveDao" ref="archiveDao" />
        <constructor-arg name="requestCreator" ref="requestCreator" />
        <constructor-arg name="switcherooDao" ref="switcherooDao" />
    </bean>

    <bean class="com.amazon.lookout.mitigation.service.activity.DeleteMitigationFromAllLocationsActivity">
        <constructor-arg name="requestValidator" ref="requestValidator"/>
        <constructor-arg name="templateBasedValidator" ref="templateBasedRequestValidator"/>
        <constructor-arg name="requestStorageManager" ref="ddbBasedRequestStorageManager"/>
        <constructor-arg name="swfWorkflowStarter" ref="swfWorkflowStarter"/>
        <constructor-arg name="templateBasedLocationsManager" ref="templateBasedLocationsManager"/>
        <constructor-arg name="requestCreator" ref="requestCreator" />
        <constructor-arg name="switcherooDao" ref="switcherooDao" />
    </bean>
    
    <bean class="com.amazon.lookout.mitigation.service.activity.GetRequestStatusActivity">
        <constructor-arg name="requestValidator" ref="requestValidator"/>
        <constructor-arg name="requestInfoHandler" ref="ddbBasedRequestInfoHandler"/>
        <constructor-arg name="mitigationInfoHandler" ref="ddbBasedInstanceInfoHandler"/>
        <constructor-arg name="currentDao" ref="currentDao" />
        <constructor-arg name="archiveDao" ref="archiveDao" />
        <constructor-arg name="switcherooDao" ref="switcherooDao" />
    </bean>
    
    <bean class="com.amazon.lookout.mitigation.service.activity.ListActiveMitigationsForServiceActivity">
        <constructor-arg name="requestValidator" ref="requestValidator"/>
        <constructor-arg name="activeMitigationsHelper" ref="activeMitigationsHelper"/>
    </bean>

    <bean class="com.amazon.lookout.mitigation.service.activity.GetMitigationInfoActivity">
        <constructor-arg name="requestValidator" ref="requestValidator"/>
        <constructor-arg name="requestInfoHandler" ref="ddbBasedRequestInfoHandler"/>
        <constructor-arg name="mitigationInstanceHandler" ref="ddbBasedInstanceInfoHandler"/>
        <constructor-arg name="currentDao" ref="currentDao" />
        <constructor-arg name="archiveDao" ref="archiveDao" />
        <constructor-arg name="switcherooDao" ref="switcherooDao" />
    </bean>

    <bean class="com.amazon.lookout.mitigation.service.activity.GetLocationDeploymentHistoryActivity">
        <constructor-arg name="requestValidator" ref="requestValidator"/>
        <constructor-arg name="mitigationInstanceHandler" ref="ddbBasedInstanceInfoHandler"/>
        <constructor-arg name="currentDao" ref="currentDao" />
        <constructor-arg name="archiveDao" ref="archiveDao" />
        <constructor-arg name="switcherooDao" ref="switcherooDao" />
    </bean>

    <bean class="com.amazon.lookout.mitigation.service.activity.GetMitigationDefinitionActivity">
        <constructor-arg name="requestValidator" ref="requestValidator"/>
        <constructor-arg name="requestInfoHandler" ref="ddbBasedRequestInfoHandler"/>
        <constructor-arg name="mitigationInstanceHandler" ref="ddbBasedInstanceInfoHandler"/>
        <constructor-arg name="currentDao" ref="currentDao" />
        <constructor-arg name="archiveDao" ref="archiveDao" />
        <constructor-arg name="switcherooDao" ref="switcherooDao" />
    </bean>

    <bean class="com.amazon.lookout.mitigation.service.activity.GetMitigationHistoryActivity">
        <constructor-arg name="requestValidator" ref="requestValidator"/>
        <constructor-arg name="requestInfoHandler" ref="ddbBasedRequestInfoHandler"/>
        <constructor-arg name="mitigationInstanceHandler" ref="ddbBasedInstanceInfoHandler"/>
        <constructor-arg name="currentDao" ref="currentDao" />
        <constructor-arg name="archiveDao" ref="archiveDao" />
        <constructor-arg name="switcherooDao" ref="switcherooDao" />
    </bean>

    <bean class="com.amazon.lookout.mitigation.service.activity.GetLocationHostStatusActivity">
        <constructor-arg name="requestValidator" ref="requestValidator"/>
        <constructor-arg name="hostStatusHandler" ref="ddbBasedHostStatusInfoHandler"/>
        <constructor-arg name="locationStateInfoHandler" ref="ddbBasedLocationStateInfoHandler"/>
    </bean>

    <bean class="com.amazon.lookout.mitigation.service.activity.RequestHostStatusChangeActivity">
        <constructor-arg name="requestValidator" ref="requestValidator"/>
        <constructor-arg name="locationStateInfoHandler" ref="ddbBasedLocationStateInfoHandler"/>
    </bean>

    <bean class="com.amazon.lookout.mitigation.service.activity.ListBlackWatchLocationsActivity">
        <constructor-arg name="requestValidator" ref="requestValidator"/>
        <constructor-arg name="locationStateInfoHandler" ref="ddbBasedLocationStateInfoHandler"/>
    </bean>

    <bean id="consolidatedMetadataMaterialSet" class="java.lang.String">
        <constructor-arg value="com.amazon.lookout.prefixes.metadata.reader.${domain}" />
    </bean>

    <bean class="com.amazon.lookout.mitigation.service.activity.UpdateBlackWatchLocationStateActivity">
        <constructor-arg name="requestValidator" ref="requestValidator"/>
        <constructor-arg name="locationStateInfoHandler" ref="ddbBasedLocationStateInfoHandler"/>
    </bean>

    <bean class="com.amazon.lookout.mitigation.service.activity.DeactivateBlackWatchMitigationActivity">
        <constructor-arg name="requestValidator" ref="requestValidator"/>
        <constructor-arg name="blackwatchMitigationInfoHandler" ref="ddbBasedBlackWatchMitigationInfoHandler"/>
    </bean>
    
    <bean class="com.amazon.lookout.mitigation.service.activity.ChangeBlackWatchMitigationOwnerARNActivity">
        <constructor-arg name="requestValidator" ref="requestValidator"/>
        <constructor-arg name="blackwatchMitigationInfoHandler" ref="ddbBasedBlackWatchMitigationInfoHandler"/>
    </bean>
    
    <bean class="com.amazon.lookout.mitigation.service.activity.ListBlackWatchMitigationsActivity">
        <constructor-arg name="requestValidator" ref="requestValidator"/>
        <constructor-arg name="blackwatchMitigationInfoHandler" ref="ddbBasedBlackWatchMitigationInfoHandler"/>
    </bean>
    
    <bean class="com.amazon.lookout.mitigation.service.activity.UpdateBlackWatchMitigationActivity">
        <constructor-arg name="requestValidator" ref="requestValidator"/>
        <constructor-arg name="blackwatchMitigationInfoHandler" ref="ddbBasedBlackWatchMitigationInfoHandler"/>
    </bean>
    
    <bean class="com.amazon.lookout.mitigation.service.activity.ApplyBlackWatchMitigationActivity">
        <constructor-arg name="requestValidator" ref="requestValidator"/>
        <constructor-arg name="blackwatchMitigationInfoHandler" ref="ddbBasedBlackWatchMitigationInfoHandler"/>
    </bean>
    
    <!-- All the beans required by the activities go here -->
    <bean id="requestValidator" class="com.amazon.lookout.mitigation.service.activity.validator.RequestValidator">
        <constructor-arg name="edgeLocationsHelper" ref="${domain}.edgeLocationsHelper"/>
        <constructor-arg name="blackWatchBorderLocationValidator" ref="blackWatchBorderLocationValidator"/>
        <constructor-arg name="blackWatchEdgeLocationValidator" ref="blackWatchEdgeLocationValidator"/>
        <constructor-arg name="currentRegion" value="${realm}"/>
    </bean>
    
    <bean id="s3OdinCredential" class="amazon.odin.awsauth.OdinAWSCredentialsProvider">
        <constructor-arg value="com.amazon.lookout.mitigationservice.s3.fullaccess.${realm}.${domain}"/>
    </bean>
    
    <bean id="blackWatchS3Client" class="com.amazonaws.services.s3.AmazonS3Client">
        <constructor-arg ref="s3OdinCredential"/>
    </bean>

    <bean id="blackWatchBorderLocationValidator" 
            class="com.amazon.lookout.mitigation.service.activity.validator.template.BlackWatchBorderLocationValidator">
        <constructor-arg name="region" value="${realm}"/>
        <constructor-arg name="borderLocationConfigFilePath" value="${root}/etc/blackwatch_border_locations.json"/>
        <constructor-arg name="allowedLocationPrefix" ref="${domain}.allowedLocationPrefix"/>
    </bean>

    <bean id="blackWatchEdgeLocationValidator"
            class="com.amazon.lookout.mitigation.service.activity.validator.template.BlackWatchEdgeLocationValidator">
        <constructor-arg name="edgeLocationsHelper" ref="${domain}.edgeLocationsHelper"/>
        <constructor-arg name="edgeLocationPattern" ref="${domain}.edgeLocationPattern"/>
        <constructor-arg name="preDefinedLocations" ref="preDefinedLocations"/>
        <constructor-arg name="allowedLocationPrefix" ref="${domain}.allowedLocationPrefix"/>
    </bean>
    
    <bean id="templateBasedRequestValidator" class="com.amazon.lookout.mitigation.service.activity.validator.template.TemplateBasedRequestValidator">
        <constructor-arg name="edgeLocationsHelper" ref="${domain}.edgeLocationsHelper"/>
        <constructor-arg name="blackWatchS3Client" ref="blackWatchS3Client"/>
        <constructor-arg name="blackWatchBorderLocationValidator" ref="blackWatchBorderLocationValidator"/>
        <constructor-arg name="blackWatchEdgeLocationValidator" ref="blackWatchEdgeLocationValidator"/>
    </bean>
    
    <bean id="ddbBasedRequestStorageManager" class="com.amazon.lookout.mitigation.service.activity.helper.dynamodb.DDBBasedRequestStorageManager">
        <constructor-arg name="dynamoDBClient" ref="dynamoDBClient"/>
        <constructor-arg name="domain" value="${domain}"/>
        <constructor-arg name="templateBasedValidator" ref="templateBasedRequestValidator"/>
    </bean>

    <bean id="activeMitigationsStatusHelper" class="com.amazon.lookout.mitigation.status.helper.ActiveMitigationsStatusHelper">
    </bean>

    <bean id="ddbBasedRequestInfoHandler" class="com.amazon.lookout.mitigation.service.activity.helper.dynamodb.DDBBasedListMitigationsHandler">
        <constructor-arg name="dynamoDBClient" ref="dynamoDBClient"/>
        <constructor-arg name="domain" value="${domain}"/>
        <constructor-arg name="activeMitigationStatusHelper" ref="activeMitigationsStatusHelper"/>
    </bean>
    
    <bean id="ddbBasedInstanceInfoHandler" class="com.amazon.lookout.mitigation.service.activity.helper.dynamodb.DDBBasedGetMitigationInfoHandler">
        <constructor-arg name="dynamoDBClient" ref="dynamoDBClient"/>
        <constructor-arg name="domain" value="${domain}"/>
    </bean>

    <bean id="ddbBasedHostStatusInfoHandler" class="com.amazon.lookout.mitigation.service.activity.helper.dynamodb.DDBBasedHostStatusInfoHandler">
        <constructor-arg name="dynamoDBClient" ref="dynamoDBClient"/>
        <constructor-arg name="domain" value="${domain}"/>
        <constructor-arg name="realm" value="${realm}"/>
   </bean>

    <bean id="ddbBasedLocationStateInfoHandler" class="com.amazon.lookout.mitigation.service.activity.helper.dynamodb.DDBBasedLocationStateInfoHandler">
        <constructor-arg name="locationStateDynamoDBHelper" ref="locationStateDynamoDBHelper"/>
    </bean>

    <bean id="locationStateDynamoDBHelper" class="com.amazon.blackwatch.location.state.storage.LocationStateDynamoDBHelper">
        <constructor-arg name="dynamoDBClient" ref="dynamoDBClient"/>
        <constructor-arg name="domain" value="${domain}"/>
        <constructor-arg name="realm" value="${realm}"/>
        <constructor-arg name="readCapacityUnits" ref="${domain}.LocationState.readCapacityUnits"/>
        <constructor-arg name="writeCapacityUnits" ref="${domain}.LocationState.writeCapacityUnits"/>
        <constructor-arg name="metricsFactory" ref="metricsFactory"/>
    </bean>

    <bean id="mitigationStateDynamoDBHelper" class="com.amazon.blackwatch.mitigation.state.storage.MitigationStateDynamoDBHelper">
        <constructor-arg name="dynamoDBClient" ref="dynamoDBClient"/>
        <constructor-arg name="domain" value="${domain}"/>
        <constructor-arg name="realm" value="${realm}"/>
        <constructor-arg name="readCapacityUnits" ref="${domain}.MitigationState.readCapacityUnits"/>
        <constructor-arg name="writeCapacityUnits" ref="${domain}.MitigationState.writeCapacityUnits"/>
        <constructor-arg name="metricsFactory" ref="metricsFactory"/>
    </bean>
    
    <bean id="resourceAllocationStateDynamoDBHelper" class="com.amazon.blackwatch.mitigation.state.storage.ResourceAllocationStateDynamoDBHelper">
        <constructor-arg name="dynamoDBClient" ref="dynamoDBClient"/>
        <constructor-arg name="realm" value="${realm}"/>
        <constructor-arg name="domain" value="${domain}"/>
        <constructor-arg name="readCapacityUnits" ref="${domain}.ResourceAllocationState.readCapacityUnits"/>
        <constructor-arg name="writeCapacityUnits" ref="${domain}.ResourceAllocationState.writeCapacityUnits"/>
        <constructor-arg name="metricsFactory" ref="metricsFactory"/>
    </bean>
    
    <bean id="resourceAllocationHelper" class="com.amazon.blackwatch.mitigation.state.storage.ResourceAllocationHelper">
        <constructor-arg name="mitigationStateDDBHelper" ref="mitigationStateDynamoDBHelper"/>
        <constructor-arg name="resourceAllocationDDBHelper" ref="resourceAllocationStateDynamoDBHelper"/>
        <constructor-arg name="metricsFactory" ref="metricsFactory"/>
    </bean>
    
    <bean id="mitigationStateParallelScanSegments" class="java.lang.Integer">
        <constructor-arg value="4"/>
    </bean>
    
    <bean id="IPAddressTypeValidator" class="com.amazon.blackwatch.mitigation.resource.validator.IPAddressResourceTypeValidator" />
    <bean id="IPAddressListTypeValidator" class="com.amazon.blackwatch.mitigation.resource.validator.IPAddressListResourceTypeValidator" />
    <bean id="ELBTypeValidator" class="com.amazon.blackwatch.mitigation.resource.validator.ELBResourceTypeValidator" />
    <bean id="EIPTypeValidator" class="com.amazon.blackwatch.mitigation.resource.validator.EIPResourceTypeValidator" />
    
    <!-- Convert public region name to the short name via RIPHelper.getRegion("${realm}"); -->
    <bean id="ripRegion" class="com.aws.rip.RIPHelper" factory-method="getRegion">
        <constructor-arg value="${realm}" />
    </bean>
    
    <bean id="regionAirportCode" class="java.lang.String">
        <constructor-arg value="#{ripRegion.getAirportCode()}" />
    </bean>

    <bean id="dogfishHelper" class="com.amazon.lookout.mitigation.service.workflow.helper.DogFishValidationHelper">
        <constructor-arg name="region" ref="regionAirportCode"/>
        <constructor-arg name="masterRegion" ref="${domain}.masterRegion"/>
        <constructor-arg name="dogfishMetadata" ref="dogFishMetadataProvider"/>
        <constructor-arg name="regionEndpoints" ref="${domain}.regionEndpointsMap"/>
    </bean>

    <bean id="ipaddressResourceTypeHelper" class="com.amazon.blackwatch.mitigation.resource.helper.BlackWatchIPAddressResourceTypeHelper" />    
    <bean id="ipaddressListResourceTypeHelper" class="com.amazon.blackwatch.mitigation.resource.helper.BlackWatchIPAddressListResourceTypeHelper" />

    <bean id="ddbBasedBlackWatchMitigationInfoHandler" class="com.amazon.lookout.mitigation.service.activity.helper.dynamodb.DDBBasedBlackWatchMitigationInfoHandler">
        <constructor-arg name="mitigationStateDynamoDBHelper" ref="mitigationStateDynamoDBHelper"/>
        <constructor-arg name="resourceAllocationStateDynamoDBHelper" ref="resourceAllocationStateDynamoDBHelper"/>
        <constructor-arg name="resourceAllocationHelper" ref="resourceAllocationHelper"/>
        <constructor-arg name="dogfishHelper" ref="dogfishHelper"/>
        <constructor-arg name="resourceTypeValidatorMap" ref="resourceTypeValidatorMap.${realm}.${domain}"/>
        <constructor-arg name="resourceTypeHelpers" ref="resourceTypeHelpers.${realm}.${domain}"/>
        <constructor-arg name="parallelScanSegments" ref="mitigationStateParallelScanSegments"/>
        <constructor-arg name="realm" value="${realm}" />
    </bean>
    
    <bean id="swfWorkflowStarter" class="com.amazon.lookout.workflow.helper.SWFWorkflowStarterImpl">
        <constructor-arg name="swfWorkflowProvider" ref="swfWorkflowClientProvider"/>
    </bean>
    
    <bean id="swfWorkflowClientProvider" class="com.amazon.lookout.workflow.helper.SWFWorkflowClientProviderImpl">
        <constructor-arg name="swfClient" ref="swfClient"/>
        <constructor-arg name="swfDomain" value="LookoutMitigationService-${domain}"/>
    </bean>
    
    <bean id="blackWatchTemplateLocationHelper" class="com.amazon.lookout.mitigation.service.workflow.helper.BlackWatchTemplateLocationHelper">
        <constructor-arg name="requestInfoHandler" ref="ddbBasedRequestInfoHandler"/>
    </bean>

    <bean id="templateBasedLocationsManager" class="com.amazon.lookout.mitigation.service.workflow.helper.TemplateBasedLocationsManager">
        <constructor-arg name="blackWatchTemplateLocationHelper" ref="blackWatchTemplateLocationHelper"/>
    </bean>

    <bean id="amazonPrefixesMetadataTracker" class="com.amazon.lookout.util.prefixes.AmazonPrefixesMetadataTracker.AllPrefixesTracker"/>

    <bean id="awsDogfishPrefixesMetadataFetcher" class="com.amazon.lookout.mitigation.service.activity.helper.AwsDogfishPrefixesMetadataFetcher">
        <constructor-arg name="pathToDiskCache" value="${root}/var/prefixes"/>
        <constructor-arg name="fileName" value="dogfish.json"/>
        <constructor-arg name="syncAlarmThresholdMinutes" value="90"/> <!-- 1.5 hours -->
        <constructor-arg name="acceptableAgeOfCachedContentMinutes" value="180"/> <!-- 3 hours -->
        <constructor-arg name="domain" ref="${domain}.dogfishBucketSuffix"/>
        <constructor-arg name="materialSet" ref="consolidatedMetadataMaterialSet"/>
        <constructor-arg name="reportees">
            <list>
                <ref bean="amazonPrefixesMetadataTracker"/>
            </list>
        </constructor-arg>
        <constructor-arg name="metricsFactory" ref="metricsFactory"/>
    </bean>
    
    <bean id="mitigationRequestTable" class="com.amazon.lookout.ddb.model.MitigationRequestsModel" factory-method="getInstance"/>
    <bean id="mitigationInstanceTable" class="com.amazon.lookout.ddb.model.MitigationInstancesModel" factory-method="getInstance"/>
    <bean id="activeMitigationTable" class="com.amazon.lookout.ddb.model.ActiveMitigationsModel" factory-method="getInstance"/>

    <bean id="tableCreatorHelper" class="com.amazon.lookout.ddb.model.TableCreatorHelper">
        <constructor-arg name="dynamoDBClient" ref="dynamoDBClient"/>
        <constructor-arg name="domain" value="${domain}"/>
        <constructor-arg name="tables">
            <list>
                <ref bean="mitigationRequestTable"/>
                <ref bean="mitigationInstanceTable"/>
                <ref bean="activeMitigationTable"/>
            </list>
        </constructor-arg>
    </bean>
    <!-- Following hashset is used by BlackWatchEdgeLocationValidator to validate LOADTEST locations and SYSTEST locations -->
    <util:set id="preDefinedLocations" set-class="java.util.HashSet" value-type="java.lang.String">
        <value>BRG-PDQ-1</value> 
        <value>G-IAD55</value> 
        <!-- for load testing we create one location for each test lab host -->
        <value>SEALAB-A</value>
        <value>SEALAB-B</value>
        <value>SEALAB-C</value>
        <value>SEALAB-D</value>
        <value>SEALAB-E</value>
        <value>SEALAB-F</value>
        <!-- for load testing we create one location for each new G-IAD55 host with LOADTEST prefix-->
        <value>LOADTEST-113</value>
        <value>LOADTEST-114</value>
        <value>LOADTEST-115</value>
        <value>LOADTEST-116</value>
        <value>LOADTEST-117</value>
        <value>LOADTEST-118</value>
        <value>LOADTEST-119</value>
        <value>LOADTEST-120</value>
        <value>LOADTEST-121</value>
        <value>LOADTEST-122</value>
        <value>LOADTEST-123</value>
        <value>LOADTEST-124</value>
    </util:set>

    <bean id="currentDao" class="com.amazon.lookout.mitigation.datastore.CurrentRequestsDAOImpl">
        <constructor-arg name="client" ref="dynamoDBClient" />
        <constructor-arg name="tableThroughput" ref="currentRequestsTableThroughput" />
        <constructor-arg name="region" value="${realm}" />
        <constructor-arg name="domain" value="${domain}" />
    </bean>

    <bean id="archiveDao" class="com.amazon.lookout.mitigation.datastore.ArchivedRequestsDAOImpl">
        <constructor-arg name="client" ref="dynamoDBClient" />
        <constructor-arg name="tableThroughput" ref="archivedRequestsTableThroughput" />
        <constructor-arg name="region" value="${realm}" />
        <constructor-arg name="domain" value="${domain}" />
    </bean>

    <bean id="workflowIdsDao" class="com.amazon.lookout.mitigation.datastore.WorkflowIdsDAOImpl">
        <constructor-arg name="client" ref="dynamoDBClient" />
        <constructor-arg name="tableThroughput" ref="workflowIdsTableThroughput" />
        <constructor-arg name="region" value="${realm}" />
        <constructor-arg name="domain" value="${domain}" />
    </bean>

    <bean id="locksDao" class="com.amazon.lookout.mitigation.datastore.MitigationServiceLocksDAOImpl">
        <constructor-arg name="client" ref="dynamoDBClient" />
        <constructor-arg name="tableThroughput" ref="mitigationServiceLocksTableThroughput" />
        <constructor-arg name="region" value="${realm}" />
        <constructor-arg name="domain" value="${domain}" />
    </bean>

    <bean id="switcherooDao" class="com.amazon.lookout.mitigation.datastore.SwitcherooDAO">
        <constructor-arg name="client" ref="dynamoDBClient" />
        <constructor-arg name="region" value="${realm}" />
        <constructor-arg name="domain" value="${domain}" />
    </bean>

    <bean id="mitigationConfigSymlinksDAO" class="com.amazon.lookout.mitigation.datastore.MitigationConfigSymlinksDAOImpl">
        <constructor-arg name="client" ref="dynamoDBClient" />
        <constructor-arg name="tableThroughput" ref="mitigationConfigSymlinksTableThroughput" />
        <constructor-arg name="region" value="${realm}" />
        <constructor-arg name="domain" value="${domain}" />
    </bean>

    <bean id="requestCreator" class="com.amazon.lookout.mitigation.RequestCreatorImpl">
        <constructor-arg name="workflowIdsDao" ref="workflowIdsDao" />
        <constructor-arg name="locksDao" ref="locksDao" />
        <constructor-arg name="currentDao" ref="currentDao" />
        <constructor-arg name="archiveDao" ref="archiveDao" />
        <constructor-arg name="activeHelper" ref="activeMitigationsHelper" />
    </bean>

    <bean id="blackWatchConfigS3Helper" class="com.amazon.blackwatch.config.s3.BlackWatchConfigS3Helper">
        <constructor-arg name="s3Bucket" value="blackwatch.configuration.${realm}.${domain}"/>
        <constructor-arg name="s3Client" ref="s3Client.${realm}.${domain}"/>
        <constructor-arg name="signatureKeyMaterialSet" value="com.amazon.blackwatch.config.signature.${realm}.${domain}.keypair"/>
        <constructor-arg name="hasPrivateSignatureKey" value="true"/>
    </bean>

    <bean id="blackWatchS3Helper" class="com.amazon.lookout.mitigation.activities.helper.BlackWatchS3Helper">
        <constructor-arg name="configS3Helper" ref="blackWatchConfigS3Helper"/>
        <!-- We cannot require config objects to be signed during the initial deployment, because
             existing config objects will not be signed, but once we've completed a config
             deployment to every location managed by a given Mitigation Service stack all objects
             should be signed and we can change configSignatureRequired to "true". -->
        <constructor-arg name="configSignatureRequired" value="false"/>
    </bean>

    <bean id="activeMitigationsHelper" class="com.amazon.lookout.mitigation.ActiveMitigationsHelperImpl">
        <constructor-arg name="mitigationConfigSymlinksDao" ref="mitigationConfigSymlinksDAO" />
        <constructor-arg name="blackWatchS3Helper" ref="blackWatchS3Helper" />
        <constructor-arg name="metricsFactory" ref="metricsFactory"/>
    </bean>
</beans>

