<?xml version="1.0" encoding="UTF-8"?>
<beans
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
    
    <!-- All the activities go here -->
    <bean class="com.amazon.lookout.mitigation.service.activity.CreateMitigationActivity">
        <constructor-arg name="requestValidator" ref="requestValidator"/>
        <constructor-arg name="templateBasedValidator" ref="templateBasedRequestValidator"/>
        <constructor-arg name="requestStorageManager" ref="ddbBasedRequestStorageManager"/>
        <constructor-arg name="swfWorkflowStarter" ref="swfWorkflowStarter"/>
        <constructor-arg name="templateBasedLocationsManager" ref="templateBasedLocationsManager"/>
    </bean>
    
    <bean class="com.amazon.lookout.mitigation.service.activity.DeleteMitigationFromAllLocationsActivity">
        <constructor-arg name="requestValidator" ref="requestValidator"/>
        <constructor-arg name="requestStorageManager" ref="ddbBasedRequestStorageManager"/>
        <constructor-arg name="swfWorkflowStarter" ref="swfWorkflowStarter"/>
        <constructor-arg name="templateBasedLocationsManager" ref="templateBasedLocationsManager"/>
    </bean>
    
    <bean class="com.amazon.lookout.mitigation.service.activity.GetRequestStatusActivity">
        <constructor-arg name="requestValidator" ref="requestValidator"/>
        <constructor-arg name="requestInfoHandler" ref="ddbBasedRequestInfoHandler"/>
        <constructor-arg name="mitigationInfoHandler" ref="ddbBasedInstanceInfoHandler"/>
    </bean>
    
    <bean class="com.amazon.lookout.mitigation.service.activity.ListActiveMitigationsForServiceActivity">
        <constructor-arg name="requestValidator" ref="requestValidator"/>
        <constructor-arg name="activeMitigationInfoHandler" ref="ddbBasedRequestInfoHandler"/>
        <constructor-arg name="requestInfoHandler" ref="ddbBasedRequestInfoHandler"/>
        <constructor-arg name="mitigationInstanceHandler" ref="ddbBasedInstanceInfoHandler"/>
        <constructor-arg name="routerMetadataHelper" ref="routerMetadataHelper"/>
        <constructor-arg name="threadPool" ref="listMitigationsActivityThreadPool"/>
    </bean>
    
    <bean class="com.amazon.lookout.mitigation.service.activity.GetMitigationInfoActivity">
        <constructor-arg name="requestValidator" ref="requestValidator"/>
        <constructor-arg name="requestInfoHandler" ref="ddbBasedRequestInfoHandler"/>
        <constructor-arg name="mitigationInstanceHandler" ref="ddbBasedInstanceInfoHandler"/>
    </bean>
    
    <!-- All the beans required by the activities go here -->
    <bean id="requestValidator" class="com.amazon.lookout.mitigation.service.activity.validator.RequestValidator"/>
    
    <bean id="templateBasedRequestValidator" class="com.amazon.lookout.mitigation.service.activity.validator.template.TemplateBasedRequestValidator">
        <constructor-arg ref="serviceSubnetsMatcher"/>
    </bean>
    
    <bean id="ddbBasedRequestStorageManager" class="com.amazon.lookout.mitigation.service.activity.helper.dynamodb.DDBBasedRequestStorageManager">
        <constructor-arg name="dynamoDBClient" ref="dynamoDBClient"/>
        <constructor-arg name="domain" value="${domain}"/>
        <constructor-arg name="templateBasedValidator" ref="templateBasedRequestValidator"/>
    </bean>
    
    <bean id="ddbBasedRequestInfoHandler" class="com.amazon.lookout.mitigation.service.activity.helper.dynamodb.DDBBasedListMitigationsHandler">
        <constructor-arg name="dynamoDBClient" ref="dynamoDBClient"/>
        <constructor-arg name="domain" value="${domain}"/>
    </bean>
    
    <bean id="ddbBasedInstanceInfoHandler" class="com.amazon.lookout.mitigation.service.activity.helper.dynamodb.DDBBasedGetMitigationInfoHandler">
        <constructor-arg name="dynamoDBClient" ref="dynamoDBClient"/>
        <constructor-arg name="domain" value="${domain}"/>
    </bean>
    
    <bean id="swfWorkflowStarter" class="com.amazon.lookout.mitigation.service.workflow.SWFWorkflowStarterImpl">
        <constructor-arg name="swfWorkflowProvider" ref="swfWorkflowClientProvider"/>
    </bean>
    
    <bean id="swfWorkflowClientProvider" class="com.amazon.lookout.mitigation.service.workflow.SWFWorkflowClientProviderImpl">
        <constructor-arg name="swfClient" ref="swfClient"/>
        <constructor-arg name="swfDomain" value="LookoutMitigationService-${domain}"/>
    </bean>
    
    <bean id="templateBasedLocationsManager" class="com.amazon.lookout.mitigation.service.workflow.helper.TemplateBasedLocationsManager">
        <constructor-arg ref="route53SingleCustomerTemplateLocationsHelper"/>
    </bean>
    
    <bean id="route53SingleCustomerTemplateLocationsHelper" class="com.amazon.lookout.mitigation.service.workflow.helper.Route53SingleCustomerTemplateLocationsHelper">
        <constructor-arg name="edgeLocationsHelper" ref="edgeLocationsHelper"/>
        <constructor-arg name="popsWithCiscoRouter" ref="${domain}.popsWithCiscoRouter"/>
    </bean>
    
    <bean id="edgeLocationsHelper" class="com.amazon.lookout.mitigation.service.workflow.helper.EdgeLocationsHelper">
        <constructor-arg name="cloudfrontClient" ref="edgeOperatorServiceClient"/>
        <constructor-arg name="daasClient" ref="daasControlAPIServiceClient"/>
        <constructor-arg name="bwLocationsHelper" ref="bwLocationsHelper"/>
        <constructor-arg name="millisToSleepBetweenRetries" value="500"/>
        <constructor-arg name="defaultPOPs" ref="${domain}.defaultPOPsForEdgeLocationsHelper"/>
        <constructor-arg name="metricsFactory" ref="metricsFactory"/>
    </bean>
    
    <bean id="monitoringQueryClientProvider" class="com.amazon.lookout.mitigation.service.workflow.helper.MonitoringQueryClientProvider">
        <constructor-arg name="odinAWSCredsProvider" ref="${domain}.mwsCredentialsProvider"/>
        <constructor-arg name="regionName" value="${realm}"/>
    </bean>
    
    <bean id="bwLocationsHelper" class="com.amazon.lookout.mitigation.service.workflow.helper.BlackwatchLocationsHelper">
        <constructor-arg name="ldapProvider" ref="ldapProvider"/>
        <constructor-arg name="overrideGammaBWPOPAsNonBW" value="true"/> <!-- Toggle this value accordingly if we want the Gamma BW POP to be considered as a non-BW POP instead -->
        <constructor-arg name="mwsClientProvider" ref="monitoringQueryClientProvider"/>
        <constructor-arg name="mwsMetricDataset" ref="${domain}.blackwatchMWSMetricDataset"/>
        <constructor-arg name="blackwatchMWSMetricName" value="Total_Mitigated_Packets_RX"/>
        <constructor-arg name="blackwatchInlineThreshold" value="30000"/>
    </bean>
    
    <bean id="ldapProvider" class="com.amazon.ldaputils.DefaultLdapProvider"/>
    
    <bean id="serviceSubnetsMatcher" class="com.amazon.lookout.mitigation.service.activity.helper.ServiceSubnetsMatcher">
        <constructor-arg>
            <list>
                <ref local="route53SubnetFetcher"/>
                <ref local="cloudFrontFMSSubnetsFetcher"/>
                <ref local="cloudFrontExternalVipsSubnetsFetcher"/>
            </list>
        </constructor-arg>
    </bean>
    
    <bean id="route53SubnetFetcher" class="com.amazon.aws158.commons.customer.Route53SubnetsFetcher">
       <constructor-arg value="${root}/etc/EdgeSetupVLAN/edge-setup-vlans.conf"/>
    </bean>
   
    <bean id="cloudFrontExternalVipsSubnetsFetcher" class="com.amazon.aws158.commons.customer.CloudFrontExternalVipsSubnetsFetcher">
       <constructor-arg value="${root}/etc/EdgeSetupVLAN/edge-setup-vlans.conf"/>
    </bean>
   
    <bean id="cloudFrontFMSSubnetsFetcher" class="com.amazon.aws158.commons.customer.CloudFrontFMSSubnetsFetcher">
       <constructor-arg value="${root}/etc/EdgeSetupVLAN/edge-setup-vlans.conf"/>
    </bean>

    <!-- New coral Activities are created per request, by creating a pool here, we ensure Spring shuts down this pool during shutdown sequence and all Activity instances share the same singleton ThreadPool instance. -->
    <bean id="listMitigationsActivityThreadPool" class="java.util.concurrent.Executors" factory-method="newFixedThreadPool">
        <constructor-arg index="0"><value>15</value></constructor-arg>
    </bean>
    
    <bean id="routerMetadataHelper" class="com.amazon.lookout.mitigation.service.activity.helper.DDBBasedRouterMetadataHelper">
        <constructor-arg name="dynamoDBClient" ref="dynamoDBClient"/>
        <constructor-arg name="domain" value="${domain}"/>
        <constructor-arg name="serviceSubnetsMatcher" ref="serviceSubnetsMatcher"/>
        <constructor-arg name="locationRouterMapper" ref="popLocationToRouterNameHelper"/>
    </bean>
    
    <bean id="popLocationToRouterNameHelper" class="com.amazon.lookout.mitigation.utilities.POPLocationToRouterNameHelper">
        <constructor-arg name="popLocationtoRoutersOverridesMap">
            <map>
                <entry key="G-IAD5" value="iad5-gm-tra-r1"/>
                <entry key="G-SFO5" value="sfo5-gm-tra-r1"/>
            </map>
        </constructor-arg>
    </bean>
</beans>

