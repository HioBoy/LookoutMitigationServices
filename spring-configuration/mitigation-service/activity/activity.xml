<?xml version="1.0" encoding="UTF-8"?>
<beans
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <context:annotation-config/>
    
    <!-- All the activities go here -->
    
    <bean class="com.amazon.lookout.mitigation.service.activity.AbortDeploymentActivity">
        <constructor-arg name="requestValidator" ref="requestValidator"/>
        <constructor-arg name="requestInfoHandler" ref="ddbBasedRequestInfoHandler"/>
        <constructor-arg name="requestStorageManager" ref="ddbBasedRequestStorageManager"/>
    </bean>
    
    <bean class="com.amazon.lookout.mitigation.service.activity.CreateMitigationActivity">
        <constructor-arg name="requestValidator" ref="requestValidator"/>
        <constructor-arg name="templateBasedValidator" ref="templateBasedRequestValidator"/>
        <constructor-arg name="requestStorageManager" ref="ddbBasedRequestStorageManager"/>
        <constructor-arg name="swfWorkflowStarter" ref="swfWorkflowStarter"/>
        <constructor-arg name="templateBasedLocationsManager" ref="templateBasedLocationsManager"/>
    </bean>

    <bean class="com.amazon.lookout.mitigation.service.activity.EditMitigationActivity">
        <constructor-arg name="requestValidator" ref="requestValidator"/>
        <constructor-arg name="templateBasedValidator" ref="templateBasedRequestValidator"/>
        <constructor-arg name="requestStorageManager" ref="ddbBasedRequestStorageManager"/>
        <constructor-arg name="swfWorkflowStarter" ref="swfWorkflowStarter"/>
        <constructor-arg name="templateBasedLocationsManager" ref="templateBasedLocationsManager"/>
    </bean>

    <bean class="com.amazon.lookout.mitigation.service.activity.RollbackMitigationActivity">
        <constructor-arg name="requestValidator" ref="requestValidator"/>
        <constructor-arg name="templateBasedValidator" ref="templateBasedRequestValidator"/>
        <constructor-arg name="requestStorageManager" ref="ddbBasedRequestStorageManager"/>
        <constructor-arg name="swfWorkflowStarter" ref="swfWorkflowStarter"/>
        <constructor-arg name="requestInfoHandler" ref="ddbBasedRequestInfoHandler"/>
    </bean>

    <bean class="com.amazon.lookout.mitigation.service.activity.DeleteMitigationFromAllLocationsActivity">
        <constructor-arg name="requestValidator" ref="requestValidator"/>
        <constructor-arg name="templateBasedValidator" ref="templateBasedRequestValidator"/>
        <constructor-arg name="requestStorageManager" ref="ddbBasedRequestStorageManager"/>
        <constructor-arg name="swfWorkflowStarter" ref="swfWorkflowStarter"/>
        <constructor-arg name="templateBasedLocationsManager" ref="templateBasedLocationsManager"/>
    </bean>
    
    <bean class="com.amazon.lookout.mitigation.service.activity.GetRequestStatusActivity">
        <constructor-arg name="requestValidator" ref="requestValidator"/>
        <constructor-arg name="requestInfoHandler" ref="ddbBasedRequestInfoHandler"/>
        <constructor-arg name="mitigationInfoHandler" ref="ddbBasedInstanceInfoHandler"/>
    </bean>
    
    <bean class="com.amazon.lookout.mitigation.service.activity.ListActiveMitigationsForServiceActivity">
        <constructor-arg name="requestValidator" ref="requestValidator"/>
        <constructor-arg name="activeMitigationInfoHandler" ref="ddbBasedRequestInfoHandler"/>
        <constructor-arg name="requestInfoHandler" ref="ddbBasedRequestInfoHandler"/>
        <constructor-arg name="mitigationInstanceHandler" ref="ddbBasedInstanceInfoHandler"/>
        <constructor-arg name="routerMetadataHelper" ref="routerMetadataHelper"/>
        <constructor-arg name="threadPool" ref="listMitigationsActivityThreadPool"/>
    </bean>

    <bean class="com.amazon.lookout.mitigation.service.activity.GetMitigationInfoActivity">
        <constructor-arg name="requestValidator" ref="requestValidator"/>
        <constructor-arg name="requestInfoHandler" ref="ddbBasedRequestInfoHandler"/>
        <constructor-arg name="mitigationInstanceHandler" ref="ddbBasedInstanceInfoHandler"/>
    </bean>

    <bean class="com.amazon.lookout.mitigation.service.activity.GetLocationDeploymentHistoryActivity">
        <constructor-arg name="requestValidator" ref="requestValidator"/>
        <constructor-arg name="mitigationInstanceHandler" ref="ddbBasedInstanceInfoHandler"/>
    </bean>

    <bean class="com.amazon.lookout.mitigation.service.activity.GetMitigationDefinitionActivity">
        <constructor-arg name="requestValidator" ref="requestValidator"/>
        <constructor-arg name="requestInfoHandler" ref="ddbBasedRequestInfoHandler"/>
        <constructor-arg name="mitigationInstanceHandler" ref="ddbBasedInstanceInfoHandler"/>
    </bean>

    <bean class="com.amazon.lookout.mitigation.service.activity.GetMitigationHistoryActivity">
        <constructor-arg name="requestValidator" ref="requestValidator"/>
        <constructor-arg name="requestInfoHandler" ref="ddbBasedRequestInfoHandler"/>
        <constructor-arg name="mitigationInstanceHandler" ref="ddbBasedInstanceInfoHandler"/>
    </bean>

    <bean class="com.amazon.lookout.mitigation.service.activity.ReportInactiveLocationActivity">
        <constructor-arg name="requestValidator" ref="requestValidator"/>
        <constructor-arg name="activeMitigationInfoHandler" ref="ddbBasedRequestInfoHandler"/>
        <constructor-arg name="domain" value="${domain}"/>
    </bean>
	
    <bean class="com.amazon.lookout.mitigation.service.activity.GetLocationHostStatusActivity">
	   <constructor-arg name="requestValidator" ref="requestValidator"/>
       <constructor-arg name="hostStatusHandler" ref="ddbBasedHostStatusInfoHandler"/>
    </bean>

    <bean class="com.amazon.lookout.mitigation.service.activity.ListBlackWatchLocationsActivity">
        <constructor-arg name="requestValidator" ref="requestValidator"/>
        <constructor-arg name="locationStateInfoHandler" ref="ddbBasedLocationStateInfoHandler"/>
    </bean>

    <bean id="consolidatedMetadataMaterialSet" class="java.lang.String">
        <constructor-arg value="com.amazon.lookout.prefixes.metadata.reader.${domain}" />
    </bean>

    <bean class="com.amazon.lookout.mitigation.service.activity.UpdateBlackWatchLocationStateActivity">
        <constructor-arg name="requestValidator" ref="requestValidator"/>
        <constructor-arg name="locationStateInfoHandler" ref="ddbBasedLocationStateInfoHandler"/>
    </bean>

    <bean class="com.amazon.lookout.mitigation.service.activity.DeactivateBlackWatchMitigationActivity">
        <constructor-arg name="requestValidator" ref="requestValidator"/>
        <constructor-arg name="blackwatchMitigationInfoHandler" ref="ddbBasedBlackWatchMitigationInfoHandler"/>
    </bean>
    
    <bean class="com.amazon.lookout.mitigation.service.activity.ChangeBlackWatchMitigationOwnerARNActivity">
        <constructor-arg name="requestValidator" ref="requestValidator"/>
        <constructor-arg name="blackwatchMitigationInfoHandler" ref="ddbBasedBlackWatchMitigationInfoHandler"/>
    </bean>
    
    <bean class="com.amazon.lookout.mitigation.service.activity.ListBlackWatchMitigationsActivity">
        <constructor-arg name="requestValidator" ref="requestValidator"/>
        <constructor-arg name="blackwatchMitigationInfoHandler" ref="ddbBasedBlackWatchMitigationInfoHandler"/>
    </bean>
    
    <bean class="com.amazon.lookout.mitigation.service.activity.UpdateBlackWatchMitigationActivity">
        <constructor-arg name="requestValidator" ref="requestValidator"/>
        <constructor-arg name="blackwatchMitigationInfoHandler" ref="ddbBasedBlackWatchMitigationInfoHandler"/>
    </bean>
    
    <bean class="com.amazon.lookout.mitigation.service.activity.ApplyBlackWatchMitigationActivity">
        <constructor-arg name="requestValidator" ref="requestValidator"/>
        <constructor-arg name="blackwatchMitigationInfoHandler" ref="ddbBasedBlackWatchMitigationInfoHandler"/>
    </bean>
    
    <bean id="blackholeMetadataActivityBase" abstract="true">
        <constructor-arg name="requestValidator" ref="requestValidator"/>
        <constructor-arg name="blackholeMitigationHelper" ref="blackholeMitigationHelper"/>
    </bean>
    
    <bean class="com.amazon.lookout.mitigation.service.activity.CreateBlackholeDeviceActivity"
        parent="blackholeMetadataActivityBase">
    </bean>
    
    <bean class="com.amazon.lookout.mitigation.service.activity.UpdateBlackholeDeviceActivity"
        parent="blackholeMetadataActivityBase">
    </bean>
    
    <bean class="com.amazon.lookout.mitigation.service.activity.GetBlackholeDeviceActivity"
        parent="blackholeMetadataActivityBase">
    </bean>
    
    <bean class="com.amazon.lookout.mitigation.service.activity.ListBlackholeDevicesActivity">
        <constructor-arg name="blackholeMitigationHelper" ref="blackholeMitigationHelper"/>
    </bean>
    
    <bean class="com.amazon.lookout.mitigation.service.activity.CreateTransitProviderActivity"
        parent="blackholeMetadataActivityBase">
    </bean>
    
    <bean class="com.amazon.lookout.mitigation.service.activity.UpdateTransitProviderActivity"
        parent="blackholeMetadataActivityBase">
    </bean>
    
    <bean class="com.amazon.lookout.mitigation.service.activity.GetTransitProviderActivity"
        parent="blackholeMetadataActivityBase">
    </bean>
    
    <bean class="com.amazon.lookout.mitigation.service.activity.ListTransitProvidersActivity">
        <constructor-arg name="blackholeMitigationHelper" ref="blackholeMitigationHelper"/>
    </bean>

    <!-- All the beans required by the activities go here -->
    <bean id="requestValidator" class="com.amazon.lookout.mitigation.service.activity.validator.RequestValidator">
        <constructor-arg name="serviceLocationsHelper" ref="serviceLocationsHelper"/>
        <constructor-arg name="edgeLocationsHelper" ref="${domain}.edgeLocationsHelper"/>
        <constructor-arg name="blackWatchBorderLocationValidator" ref="blackWatchBorderLocationValidator"/>
        <constructor-arg name="blackWatchEdgeLocationValidator" ref="blackWatchEdgeLocationValidator"/>
    </bean>
    
    <bean id="serviceLocationsHelper" class="com.amazon.lookout.mitigation.service.activity.helper.ServiceLocationsHelper">
        <constructor-arg name="edgeLocationsHelper" ref="${domain}.edgeLocationsHelper"/>
    </bean>

    <bean id="s3OdinCredential" class="amazon.odin.awsauth.OdinAWSCredentialsProvider">
        <constructor-arg value="com.amazon.lookout.mitigationservice.s3.fullaccess.${realm}.${domain}"/>
    </bean>
    
    <bean id="blackWatchS3Client" class="com.amazonaws.services.s3.AmazonS3Client">
        <constructor-arg ref="s3OdinCredential"/>
    </bean>

    <bean id="blackWatchBorderLocationValidator" 
            class="com.amazon.lookout.mitigation.service.activity.validator.template.BlackWatchBorderLocationValidator">
        <constructor-arg name="preDefinedLocations" ref="${domain}.preDefinedLocations"/>
        <constructor-arg name="allowedLocationPrefix" ref="${domain}.allowedLocationPrefix"/>
    </bean>

    <bean id="blackWatchEdgeLocationValidator"
            class="com.amazon.lookout.mitigation.service.activity.validator.template.BlackWatchEdgeLocationValidator">
        <constructor-arg name="edgeLocationsHelper" ref="${domain}.edgeLocationsHelper"/>
        <constructor-arg name="edgeLocationPattern" ref="${domain}.edgeLocationPattern"/>
        <constructor-arg name="preDefinedLocations" ref="${domain}.preDefinedLocations"/>
    </bean>
    
    <bean id="templateBasedRequestValidator" class="com.amazon.lookout.mitigation.service.activity.validator.template.TemplateBasedRequestValidator">
        <constructor-arg name="serviceSubnetsMatcher" ref="serviceSubnetsMatcher"/>
        <constructor-arg name="edgeLocationsHelper" ref="${domain}.edgeLocationsHelper"/>
        <constructor-arg name="blackWatchS3Client" ref="blackWatchS3Client"/>
        <constructor-arg name="blackholeMitigationHelper" ref="blackholeMitigationHelper"/>
        <constructor-arg name="blackWatchBorderLocationValidator" ref="blackWatchBorderLocationValidator"/>
        <constructor-arg name="blackWatchEdgeLocationValidator" ref="blackWatchEdgeLocationValidator"/>
    </bean>
    
    <bean id="ddbBasedRequestStorageManager" class="com.amazon.lookout.mitigation.service.activity.helper.dynamodb.DDBBasedRequestStorageManager">
        <constructor-arg name="dynamoDBClient" ref="dynamoDBClient"/>
        <constructor-arg name="domain" value="${domain}"/>
        <constructor-arg name="templateBasedValidator" ref="templateBasedRequestValidator"/>
    </bean>

    <bean id="activeMitigationsStatusHelper" class="com.amazon.lookout.mitigation.status.helper.ActiveMitigationsStatusHelper">
        <constructor-arg name="dynamoDBClient" ref="dynamoDBClient"/>
        <constructor-arg name="domain" value="${domain}"/>
    </bean>

    <bean id="ddbBasedRequestInfoHandler" class="com.amazon.lookout.mitigation.service.activity.helper.dynamodb.DDBBasedListMitigationsHandler">
        <constructor-arg name="dynamoDBClient" ref="dynamoDBClient"/>
        <constructor-arg name="domain" value="${domain}"/>
        <constructor-arg name="activeMitigationStatusHelper" ref="activeMitigationsStatusHelper"/>
    </bean>
    
    <bean id="ddbBasedInstanceInfoHandler" class="com.amazon.lookout.mitigation.service.activity.helper.dynamodb.DDBBasedGetMitigationInfoHandler">
        <constructor-arg name="dynamoDBClient" ref="dynamoDBClient"/>
        <constructor-arg name="domain" value="${domain}"/>
    </bean>

    <bean id="ddbBasedHostStatusInfoHandler" class="com.amazon.lookout.mitigation.service.activity.helper.dynamodb.DDBBasedHostStatusInfoHandler">
        <constructor-arg name="dynamoDBClient" ref="dynamoDBClient"/>
        <constructor-arg name="domain" value="${domain}"/>
        <constructor-arg name="realm" value="${realm}"/>
	</bean>

    <bean id="ddbBasedLocationStateInfoHandler" class="com.amazon.lookout.mitigation.service.activity.helper.dynamodb.DDBBasedLocationStateInfoHandler">
        <constructor-arg name="locationStateDynamoDBHelper" ref="locationStateDynamoDBHelper"/>
    </bean>

    <bean id="locationStateDynamoDBHelper" class="com.amazon.blackwatch.location.state.storage.LocationStateDynamoDBHelper">
        <constructor-arg name="dynamoDBClient" ref="dynamoDBClient"/>
        <constructor-arg name="domain" value="${domain}"/>
        <constructor-arg name="realm" value="${realm}"/>
        <constructor-arg name="readCapacityUnits" ref="${domain}.LocationState.readCapacityUnits"/>
        <constructor-arg name="writeCapacityUnits" ref="${domain}.LocationState.writeCapacityUnits"/>
        <constructor-arg name="metricsFactory" ref="metricsFactory"/>
    </bean>

    <bean id="mitigationStateDynamoDBHelper" class="com.amazon.blackwatch.mitigation.state.storage.MitigationStateDynamoDBHelper">
        <constructor-arg name="dynamoDBClient" ref="dynamoDBClient"/>
        <constructor-arg name="domain" value="${domain}"/>
        <constructor-arg name="realm" value="${realm}"/>
        <constructor-arg name="readCapacityUnits" ref="${domain}.MitigationState.readCapacityUnits"/>
        <constructor-arg name="writeCapacityUnits" ref="${domain}.MitigationState.writeCapacityUnits"/>
        <constructor-arg name="metricsFactory" ref="metricsFactory"/>
    </bean>
    
    <bean id="resourceAllocationStateDynamoDBHelper" class="com.amazon.blackwatch.mitigation.state.storage.ResourceAllocationStateDynamoDBHelper">
        <constructor-arg name="dynamoDBClient" ref="dynamoDBClient"/>
        <constructor-arg name="realm" value="${realm}"/>
        <constructor-arg name="domain" value="${domain}"/>
        <constructor-arg name="readCapacityUnits" ref="${domain}.ResourceAllocationState.readCapacityUnits"/>
        <constructor-arg name="writeCapacityUnits" ref="${domain}.ResourceAllocationState.writeCapacityUnits"/>
        <constructor-arg name="metricsFactory" ref="metricsFactory"/>
    </bean>
    
    <bean id="resourceAllocationHelper" class="com.amazon.blackwatch.mitigation.state.storage.ResourceAllocationHelper">
        <constructor-arg name="mitigationStateDDBHelper" ref="mitigationStateDynamoDBHelper"/>
        <constructor-arg name="resourceAllocationDDBHelper" ref="resourceAllocationStateDynamoDBHelper"/>
        <constructor-arg name="metricsFactory" ref="metricsFactory"/>
    </bean>
    
    <bean id="mitigationStateParallelScanSegments" class="java.lang.Integer">
        <constructor-arg value="4"/>
    </bean>
    
    <bean id="IPAddressTypeValidator" class="com.amazon.lookout.mitigation.blackwatch.model.IPAddressResourceTypeValidator" />
    <bean id="IPAddressListTypeValidator" class="com.amazon.lookout.mitigation.blackwatch.model.IPAddressListResourceTypeValidator" />
    
    <!-- Convert public region name to the short name via RIPHelper.getRegion("${realm}"); -->
    <bean id="ripRegion" class="com.aws.rip.RIPHelper" factory-method="getRegion">
        <constructor-arg value="${realm}" />
    </bean>
    
    <bean id="regionAirportCode" class="java.lang.String">
        <constructor-arg value="#{ripRegion.getAirportCode()}" />
    </bean>
    
    
    <bean id="dogfishHelper" class="com.amazon.lookout.mitigation.service.workflow.helper.DogFishValidationHelper">
        <constructor-arg name="region" ref="regionAirportCode"/>
        <constructor-arg name="masterRegion" ref="${domain}.masterRegion"/>
        <constructor-arg name="dogfishMetadata" ref="dogFishMetadataProvider"/>
        <constructor-arg name="regionEndpoints" ref="${domain}.regionEndpointsMap"/>
    </bean>
    
    <util:map id="resourceTypeValidatorMap" 
        key-type="com.amazon.lookout.mitigation.blackwatch.model.BlackWatchMitigationResourceType" 
        value-type="com.amazon.lookout.mitigation.blackwatch.model.BlackWatchResourceTypeValidator">
        <entry key="IPAddress" value-ref="IPAddressTypeValidator"/>
        <entry key="IPAddressList" value-ref="IPAddressListTypeValidator"/>
    </util:map>

    <bean id="ddbBasedBlackWatchMitigationInfoHandler" class="com.amazon.lookout.mitigation.service.activity.helper.dynamodb.DDBBasedBlackWatchMitigationInfoHandler">
        <constructor-arg name="mitigationStateDynamoDBHelper" ref="mitigationStateDynamoDBHelper"/>
        <constructor-arg name="resourceAllocationStateDynamoDBHelper" ref="resourceAllocationStateDynamoDBHelper"/>
        <constructor-arg name="resourceAllocationHelper" ref="resourceAllocationHelper"/>
        <constructor-arg name="dogfishHelper" ref="dogfishHelper"/>
        <constructor-arg name="resourceTypeValidatorMap" ref="resourceTypeValidatorMap"/>
        <constructor-arg name="parallelScanSegments" ref="mitigationStateParallelScanSegments"/>
    </bean>
    
    <bean id="swfWorkflowStarter" class="com.amazon.lookout.mitigation.service.workflow.SWFWorkflowStarterImpl">
        <constructor-arg name="swfWorkflowProvider" ref="swfWorkflowClientProvider"/>
    </bean>
    
    <bean id="swfWorkflowClientProvider" class="com.amazon.lookout.mitigation.service.workflow.SWFWorkflowClientProviderImpl">
        <constructor-arg name="swfClient" ref="swfClient"/>
        <constructor-arg name="swfDomain" value="LookoutMitigationService-${domain}"/>
    </bean>
    
    <bean id="blackWatchTemplateLocationHelper" class="com.amazon.lookout.mitigation.service.workflow.helper.BlackWatchTemplateLocationHelper">
        <constructor-arg name="requestInfoHandler" ref="ddbBasedRequestInfoHandler"/>
    </bean>

    <bean id="templateBasedLocationsManager" class="com.amazon.lookout.mitigation.service.workflow.helper.TemplateBasedLocationsManager">
        <constructor-arg name="route53SingleCustomerHelper" ref="route53SingleCustomerTemplateLocationsHelper"/>
        <constructor-arg name="blackWatchTemplateLocationHelper" ref="blackWatchTemplateLocationHelper"/>
    </bean>
    
    <bean id="route53SingleCustomerTemplateLocationsHelper" class="com.amazon.lookout.mitigation.service.workflow.helper.Route53SingleCustomerTemplateLocationsHelper">
        <constructor-arg name="edgeLocationsHelper" ref="${domain}.edgeLocationsHelper"/>
        <constructor-arg name="popsWithCiscoRouter" ref="${domain}.popsWithCiscoRouter"/>
    </bean>
    
    <bean id="monitoringQueryClientProvider" class="com.amazon.lookout.mitigation.service.workflow.helper.MonitoringQueryClientProvider">
        <constructor-arg name="odinAWSCredsProvider" ref="${domain}.mwsCredentialsProvider"/>
        <constructor-arg name="regionName" value="${realm}"/>
    </bean>
    
    <bean id="bwLocationsHelper" class="com.amazon.lookout.mitigation.service.workflow.helper.BlackwatchLocationsHelper">
        <constructor-arg name="ldapProvider" ref="ldapProvider"/>
        <constructor-arg name="overrideGammaBWPOPAsNonBW" value="true"/> <!-- Toggle this value accordingly if we want the Gamma BW POP to be considered as a non-BW POP instead -->
        <constructor-arg name="mwsClientProvider" ref="monitoringQueryClientProvider"/>
        <constructor-arg name="mwsMetricDataset" ref="${domain}.blackwatchMWSMetricDataset"/>
        <constructor-arg name="blackwatchMWSMetricName" value="Total_Mitigated_Packets_RX"/>
        <constructor-arg name="blackwatchInlineThreshold" value="30000"/>
    </bean>
    
    <bean id="ldapProvider" class="com.amazon.ldaputils.DefaultLdapProvider"/>
    
    <bean id="serviceSubnetsMatcher" class="com.amazon.lookout.mitigation.service.activity.helper.ServiceSubnetsMatcher">
        <constructor-arg>
            <list>
                <ref bean="route53SubnetFetcher"/>
                <ref bean="cloudFrontFMSSubnetsFetcher"/>
            </list>
        </constructor-arg>
    </bean>
    
    <bean id="route53SubnetFetcher" class="com.amazon.aws158.commons.customer.Route53SubnetsFetcher">
       <constructor-arg value="${root}/etc/EdgeSetupVLAN/edge-setup-vlans.conf"/>
    </bean>
   
    <bean id="cloudFrontExternalVipsSubnetsFetcher" class="com.amazon.aws158.commons.customer.CloudFrontExternalVipsSubnetsFetcher">
       <constructor-arg value="${root}/etc/EdgeSetupVLAN/edge-setup-vlans.conf"/>
    </bean>
   
    <bean id="cloudFrontFMSSubnetsFetcher" class="com.amazon.aws158.commons.customer.CloudFrontFMSSubnetsFetcher">
       <constructor-arg value="${root}/etc/EdgeSetupVLAN/edge-setup-vlans.conf"/>
    </bean>

    <bean id="amazonPrefixesMetadataTracker" class="com.amazon.lookout.util.prefixes.AmazonPrefixesMetadataTracker.AllPrefixesTracker"/>

    <bean id="awsDogfishPrefixesMetadataFetcher" class="com.amazon.lookout.mitigation.service.activity.helper.AwsDogfishPrefixesMetadataFetcher">
        <constructor-arg name="pathToDiskCache" value="${root}/var/prefixes"/>
        <constructor-arg name="fileName" value="dogfish.json"/>
        <constructor-arg name="syncAlarmThresholdMinutes" value="90"/> <!-- 1.5 hours -->
        <constructor-arg name="acceptableAgeOfCachedContentMinutes" value="180"/> <!-- 3 hours -->
        <constructor-arg value="${domain}"/>
        <constructor-arg name="materialSet" ref="consolidatedMetadataMaterialSet"/>
        <constructor-arg name="reportees">
            <list>
                <ref bean="amazonPrefixesMetadataTracker"/>
            </list>
        </constructor-arg>
        <constructor-arg name="metricsFactory" ref="metricsFactory"/>
    </bean>
    
    <!-- New coral Activities are created per request, by creating a pool here, we ensure Spring shuts down this pool during shutdown sequence and all Activity instances share the same singleton ThreadPool instance. -->
    <bean id="listMitigationsActivityThreadPool" class="java.util.concurrent.Executors" factory-method="newFixedThreadPool">
        <constructor-arg index="0"><value>15</value></constructor-arg>
    </bean>
    
    <bean id="routerMetadataHelper" class="com.amazon.lookout.mitigation.service.activity.helper.DDBBasedRouterMetadataHelper">
        <constructor-arg name="dynamoDBClient" ref="dynamoDBClient"/>
        <constructor-arg name="domain" value="${domain}"/>
        <constructor-arg name="serviceSubnetsMatcher" ref="serviceSubnetsMatcher"/>
        <constructor-arg name="locationRouterMapper" ref="popLocationToRouterNameHelper"/>
    </bean>
    
    <bean id="popLocationToRouterNameHelper" class="com.amazon.lookout.mitigation.utilities.POPLocationToRouterNameHelper">
        <constructor-arg name="popLocationtoRoutersOverridesMap">
            <map>
                <entry key="G-IAD5" value="iad5-gm-tra-r1"/>
                <entry key="G-SFO5" value="sfo5-gm-tra-r1"/>
            </map>
        </constructor-arg>
    </bean>
    
    <bean id="blackholeMitigationHelper" class="com.amazon.lookout.mitigation.workers.helper.BlackholeMitigationHelper">
        <constructor-arg name="dynamoDBClient" ref="dynamoDBClient"/>
        <constructor-arg name="domain" value="${domain}"/>
        <constructor-arg name="realm" value="${realm}"/>
    </bean>
    
    <bean id="mitigationRequestTable" class="com.amazon.lookout.ddb.model.MitigationRequestsModel" factory-method="getInstance"/>
    <bean id="mitigationInstanceTable" class="com.amazon.lookout.ddb.model.MitigationInstancesModel" factory-method="getInstance"/>
    <bean id="activeMitigationTable" class="com.amazon.lookout.ddb.model.ActiveMitigationsModel" factory-method="getInstance"/>
    <bean id="blackholeTable" factory-bean="blackholeMitigationHelper" factory-method="getBlackholeTableDefinition"/>
    <bean id="transitProviderTable" factory-bean="blackholeMitigationHelper" factory-method="getTransitProviderTableDefinition"/>

    <bean id="tableCreatorHelper" class="com.amazon.lookout.ddb.model.TableCreatorHelper">
        <constructor-arg name="dynamoDBClient" ref="dynamoDBClient"/>
        <constructor-arg name="domain" value="${domain}"/>
        <constructor-arg name="tables">
            <list>
                <ref bean="mitigationRequestTable"/>
                <ref bean="mitigationInstanceTable"/>
                <ref bean="activeMitigationTable"/>
                <ref bean="blackholeTable"/>
                <ref bean="transitProviderTable"/>
            </list>
        </constructor-arg>
    </bean>
</beans>

