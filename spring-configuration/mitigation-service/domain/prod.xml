<?xml version="1.0" encoding="UTF-8"?>
<beans
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
    
    <bean id="prod.daasControlAPIServiceURL" class="java.lang.String">
        <constructor-arg value="http://daas-operator-control-api.amazon.com:80"/>
    </bean>
    
    <bean id="prod.edgeOperatorServiceURL" class="java.lang.String">
        <constructor-arg value="http://edge-operator-service.amazon.com:8080"/>
    </bean>

    <bean id="prod.dogfishBucketSuffix" class="java.lang.String">
        <constructor-arg value="prod" />
    </bean>
    
    <bean id="prod.masterRegion" class="java.lang.String">
        <constructor-arg value="IAD"/>
    </bean>
    
    <util:list id="prod.fakeBlackWatchClassicLocations"/>
    
    <bean id="prod.blackwatchMWSMetricDataset" class="java.lang.String">
        <constructor-arg value="Prod"/>
    </bean>
    
    <util:set id="prod.defaultPOPsForEdgeLocationsHelper"/>

    <bean id="prod.edgeLocationsHelper" class="com.amazon.lookout.mitigation.service.workflow.helper.EdgeLocationsHelper">
        <constructor-arg name="cloudfrontClient" ref="edgeOperatorServiceClient"/>
        <constructor-arg name="daasClient" ref="daasControlAPIServiceClient"/>
        <constructor-arg name="millisToSleepBetweenRetries" value="500"/>
        <constructor-arg name="popsListDir" value="var/state/popsList"/>
        <constructor-arg name="metricsFactory" ref="metricsFactory"/>
        <constructor-arg name="fakeBlackWatchClassicLocations" ref="prod.fakeBlackWatchClassicLocations"/>
    </bean>
     
    <bean id="prod.edgeLocationPattern" class="java.lang.String">
        <constructor-arg value="^[GE]-([A-Z0-9]+)$"/>
    </bean>

    <bean id="prod.allowedLocationPrefix" class="java.lang.String">
        <constructor-arg value=""/>
    </bean>

    <bean id="prod.LocationState.readCapacityUnits" class="java.lang.Long">
        <constructor-arg value="200"/>
    </bean>

    <bean id="prod.LocationState.writeCapacityUnits" class="java.lang.Long">
        <constructor-arg value="50"/>
    </bean>
    
    <bean id="prod.MitigationState.readCapacityUnits" class="java.lang.Long">
        <constructor-arg value="200"/>
    </bean>

    <bean id="prod.MitigationState.writeCapacityUnits" class="java.lang.Long">
        <constructor-arg value="200"/>
    </bean>
    
    <bean id="prod.ResourceAllocationState.readCapacityUnits" class="java.lang.Long">
        <constructor-arg value="200"/>
    </bean>

    <bean id="prod.ResourceAllocationState.writeCapacityUnits" class="java.lang.Long">
        <constructor-arg value="200"/>
    </bean>

    <bean id="prod.dynamoDBCredentialsProvider" class="amazon.odin.awsauth.OdinAWSCredentialsProvider">
        <constructor-arg value="com.amazon.lookout.dynamodb.mitigationservice.${realm}.prod"/>
    </bean>

    <bean id="prod.swfCredentialsProvider" class="amazon.odin.awsauth.OdinAWSCredentialsProvider">
        <constructor-arg value="com.amazon.lookout.swf.mitigationservice.${realm}.prod"/>
    </bean>

    <import resource="file:${spring.config.root}/domain/prod-locations-generated.xml"/>
</beans>
